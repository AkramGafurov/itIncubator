{"ast":null,"code":"import React from\"react\";var ToDoLIst=function ToDoLIst(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,props.title),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",null),/*#__PURE__*/React.createElement(\"button\",null,\"+\")),/*#__PURE__*/React.createElement(\"ul\",null,props.tasks.map(function(item){return/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:item.isDone}),/*#__PURE__*/React.createElement(\"span\",null,item.title),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){props.removeTask(item.id);}},\"X\"));})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return props.setFilter('all');}},\"All\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return props.setFilter('active');}},\"Active\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return props.setFilter('completed');}},\"Completed\")))));};export default ToDoLIst;","map":{"version":3,"names":["React","ToDoLIst","props","title","tasks","map","item","isDone","removeTask","id","setFilter"],"sources":["D:/IT/it-Incubator/itIncubator/toDoList/src/ToDoLIst.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {FC} from 'react'\r\nimport {FilterValuesType} from \"./App\";\r\n\r\n// type TodoListPropsType = {\r\n//     title: string,\r\n//     tasks: Array<TaskType>\r\n// }\r\n//\r\n// export type  TaskType = {\r\n//     id: number,\r\n//     title: string,\r\n//     isDone: boolean,\r\n// }\r\n//\r\n// const ToDoLIst/*: FC<TodoListPropsType> можно типизировать и так*/ = (props: TodoListPropsType) => {\r\n//     return (\r\n//         <div>\r\n//             <h3>{props.title}</h3>\r\n//             <div>\r\n//                 <input/>\r\n//                 <button>+</button>\r\n//             </div>\r\n//             <ul>\r\n//                 <li><input type=\"checkbox\" checked={props.tasks[0].isDone}/> <span>{props.tasks[0].title}</span></li>\r\n//                 <li><input type=\"checkbox\" checked={props.tasks[1].isDone}/> <span>{props.tasks[1].title}</span></li>\r\n//                 <li><input type=\"checkbox\" checked={props.tasks[2].isDone}/> <span>{props.tasks[2].title}</span></li>\r\n//             </ul>\r\n//             <div>\r\n//                 <button>All</button>\r\n//                 <button>Active</button>\r\n//                 <button>Completed</button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ToDoLIst;\r\n\r\nexport type ToDoListType = {\r\n    title: string,\r\n    tasks: Array<TaskType>,\r\n    removeTask: (id:number) => void,\r\n    setFilter: (value: FilterValuesType) => void,\r\n}\r\n\r\nexport type TaskType = {\r\n    id: number,\r\n    isDone: boolean,\r\n    title: string,\r\n}\r\n\r\nconst ToDoLIst: FC<ToDoListType> = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"App\">\r\n                <div>\r\n                    <h3>{props.title}</h3>\r\n                    <div>\r\n                        <input/>\r\n                        <button>+</button>\r\n                    </div>\r\n                    <ul>\r\n                        {props.tasks.map(item => {\r\n                            return <li>\r\n                                <input type=\"checkbox\" checked={item.isDone}/>\r\n                                <span>{item.title}</span>\r\n                                <button onClick={() => {\r\n                                    props.removeTask(item.id)\r\n                                }}>X\r\n                                </button>\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                    <div>\r\n                        <button onClick = {() => props.setFilter('all')}>All</button>\r\n                        <button onClick = {() => props.setFilter('active')}>Active</button>\r\n                        <button onClick = {() => props.setFilter('completed')}>Completed</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToDoLIst;\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CAoDA,GAAMC,SAA0B,CAAG,QAA7BA,SAA6B,CAACC,KAAD,CAAW,CAC1C,mBACI,qDACI,2BAAK,SAAS,CAAC,KAAf,eACI,4CACI,8BAAKA,KAAK,CAACC,KAAX,CADJ,cAEI,4CACI,iCADJ,cAEI,sCAFJ,CAFJ,cAMI,8BACKD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,SAAAC,IAAI,CAAI,CACrB,mBAAO,2CACH,6BAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,CAAEA,IAAI,CAACC,MAArC,EADG,cAEH,gCAAOD,IAAI,CAACH,KAAZ,CAFG,cAGH,8BAAQ,OAAO,CAAE,kBAAM,CACnBD,KAAK,CAACM,UAAN,CAAiBF,IAAI,CAACG,EAAtB,EACH,CAFD,MAHG,CAAP,CAQH,CATA,CADL,CANJ,cAkBI,4CACI,8BAAQ,OAAO,CAAI,yBAAMP,MAAK,CAACQ,SAAN,CAAgB,KAAhB,CAAN,EAAnB,QADJ,cAEI,8BAAQ,OAAO,CAAI,yBAAMR,MAAK,CAACQ,SAAN,CAAgB,QAAhB,CAAN,EAAnB,WAFJ,cAGI,8BAAQ,OAAO,CAAI,yBAAMR,MAAK,CAACQ,SAAN,CAAgB,WAAhB,CAAN,EAAnB,cAHJ,CAlBJ,CADJ,CADJ,CADJ,CA8BH,CA/BD,CAiCA,cAAeT,SAAf"},"metadata":{},"sourceType":"module"}